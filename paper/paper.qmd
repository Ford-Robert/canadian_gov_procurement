---
title: "Procurements of the Canadian Government, Runaway Military Contracts"
author: 
  - Robert Ford
thanks: "Code and data are available at: https://github.com/Ford-Robert"
date: today
date-format: long
abstract: "First sentence. Second sentence. Third sentence. Fourth sentence."
format: pdf
number-sections: true
bibliography: references.bib
---

```{r}
#| include: false
#| warning: false
#| message: false

library(tidyverse)
library(ggplot2)
library(dplyr)
library(lubridate)
library(scales)
library(knitr)
library(kableExtra)
library(zoo)
library(broom)

df <- read_csv(here::here("data/analysis_data/cleaned_data.csv"))
aggregated_df <- read_csv(here::here("data/analysis_data/top_ten_suppliers.csv"))
model <- read_rds(here::here("models/gen_model.rds"))
mil_model <- read_rds(here::here("models/mil_model.rds"))

aView(df)
```


# Introduction

In recent years, Canada's federal spending landscape has undergone significant transformations, particularly with a marked increase in military expenditures. The government has announced substantial new military spending packages, [REF] 

Federal procurements involve the acquisition of goods and services by government departments, Buyers, from companies, Suppliers. These procurements are essential for a wide range of government functions from; acquiring defense equipment, building infrastructure, procuring healthcare supplies, technological services and engineering consultants for example. This paper will analyse federal procurement data to dissect government procurements over the last four years. 

The primary questions this paper aims to address are: What is the government buying? Who are the primary suppliers? How are spending patterns shifting across different departments and over time? 

I collected and processed detailed data on over 301,000 contracts awarded since January 2020. The dataset includes variables such as contract amounts, durations, award dates, Buyers, and Suppliers. We derived additional metrics to facilitate our analysis, such as Baseline Days (the number of days since January 1, 2020) and Duration Days (the length of each contract), and standardized supplier names to ensure consistency. 

Some significant findings presented in this paper include: military procurement spending has surged in the past few years. Where the Department of National Defence now dominates federal procurement spending, with expenditures exceeding $56 billion since 2020. This increase in spending is in part thanks to large contracts, including a $11.2 billion contract to SkyAlyne for fighter pilot training—the largest in our dataset—and multi-billion-dollar contracts for fighter jets and naval vessels. 

While  other government departments have experienced a notable decrease in procurement spending. For instance, the Public Health Agency of Canada's spending, which was substantial in 2020 due to the COVID-19 pandemic, has declined significantly in subsequent years. 

These findings are important for several reasons. They provide critical insights into how government spending priorities are shifting, which has implications for economic policy, industry stakeholders, and public transparency. Understanding the concentration of spending in large military contracts can inform discussions on national defense strategies, budget allocations, and the impact on domestic industries. 

The paper is structured as follows: [Section 2] details the data collection and processing methodologies, including the sources of procurement data and the steps taken to clean and standardize the dataset. Then I present a series of graphs to demonstrate government procurements from various angles. [Section 3] describes the linear regression models used to assess trends in contract amounts over time and contract duration. [Section 4] presents the results of the analysis, highlighting key trends in military and non-military procurement spending. [Section 5] discusses the limitations of the study, including data constraints and methodological considerations, and suggests areas for future research. Finally, Section 6 concludes with a summary of the findings and their implications for policymakers, industry stakeholders, and future studies. 

By providing a comprehensive analysis of federal procurement spending, this paper aims to fill the existing gap in understanding how government consumption of private sector goods and services is changing over time. The insights gained from this study can inform policy decisions, contribute to academic discourse, and enhance transparency regarding government spending practices. 


TODO Cite R and all other packages

TODO Estimand?

# Data {#sec-data}

The data was collected using R and other packages [REF]. A web scraping script was used to collect all Federal Award Data from the IJF [REF]. The variables this paper focuses collected from the IJF are; Contract, Buyer, Supplier, Amount, Award Date, Start Date, and End Date.  

Contract: A few words detailing  a brief description of what the contract signed was for 

Buyer: The name of government department who awarded the contract 

Supplier: The name of the company that fulfilled the contract by agreeing to provide the good or service to the Buyer 

Amount: The value of the contract in Canadian Dollars 

Award Date: The day the Buyer awarded the contract to the supplier 

Start Date: When the contract is due to start 

End Date: When the contract is due to end 

I derived three additional variables using the IJF variables: 

Baseline Days: Number of days since 1st January 2020 

Duration Days: End Date subtracted from the Start Date to calculate the duration of the contract 

Processed Supplier: The name of suppliers regularized to allow for aggregation and comparison 


Baseline Days and Duration Days are used as predictors in the linear model, as Dates are not valid entries into a linear model.
 
Processed Supplier is required as many companies have slightly different spellings, such as [“General Dynamics”, “GENERAL DYNAMICS”, “General Dynamics Mission Systems”, “GENERAL DYNAMICS MISSION SYSTEMS INC”]. See Appendix TODO for how I processed and regularized the suppliers. 

Here is the head of the data that was used in this analysis for a sense of what these variables represent. 
TODO Fix table
```{r fig-head}
#| message: false
#| echo: false
#| warning: false
#| fig-cap: template
#| fig-align: center

df_table <- df %>% select(-contract, -start_date, -end_date, -link, -duration_days, -per_day, -processed_supplier)

kable(head(df_table, 5), caption = "Sample of the Data") %>%
  kable_styling(font_size = 10, latex_options = c("scale_down"))

```

The data was then cleaned. First I began by setting each variable to the correct data type. Then I removed any data point where Amount was negative or zero, because I am not sure what a negative amount means in this context and contracts that are not worth anything are not worth looking at. There were a number of contracts which started and ended on the same day, to simplify later calculation I simply added a day to their End Date, figuring that same day contracts are equivalent to one day contracts. Further data cleaning details are available in Appendix TODO. After cleaning I was left with 301,094 contracts spanning TODO to TODO.

## Measurement

The data is recorded and published through various government agencies, who use different accounting standards and procedures. The three sources IFJ used to collect the federal procurement data are; Canada Buys, Buy and Sell, and Proactive Disclosures (which makes up the vast majority of the procurement data). However, because the data used in this paper is pulled from the IFJ’s Federal Awards page this data comes exclusively from the Proactive Disclosures. The Treasury Board of Canada Secretariat is responsible for publishing these Proactive Disclosures under the Access to Information Act [REF].

## Analysis

This is a break down of total amount awarded by the top 5 biggest spending Buyers. The Other category consists the of the total awards given by the remaining 88 smallest Government Buyers.  It is clear that National Defence dwarfs the procurement budget, spending over /$56 Billion on procurements since 2020. 

```{r fig-pie-buyers}
#| message: false
#| echo: false
#| warning: false
#| fig-cap: Top 5 Buyers by Total Amount Spent and Others (Pie Chart)
#| fig-align: center


# Summarize total amount spent by each buyer
buyer_totals <- df %>%
  group_by(buyer) %>%
  summarise(total_amount = sum(amount, na.rm = TRUE)) %>%
  arrange(desc(total_amount))

# Identify the top 5 buyers
top_five_buyers <- buyer_totals %>%
  slice_head(n = 5) %>%
  pull(buyer)

# Create a new column 'buyer_group' where buyers not in top 5 are labeled as 'Other'
buyer_totals_grouped <- buyer_totals %>%
  mutate(buyer_group = ifelse(buyer %in% top_five_buyers, buyer, "Other")) %>%
  group_by(buyer_group) %>%
  summarise(total_amount = sum(total_amount, na.rm = TRUE)) %>%
  arrange(desc(total_amount)) %>%
  mutate(percentage = total_amount / sum(total_amount) * 100)

# TODO: Assign specific colors to each buyer group
# Example color assignments (replace with desired colors)
buyer_colors <- c(
  "National Defence" = "#1f77b4",
  "Public Services and Procurement Canada" = "#ff7f0e",
  "Shared Services Canada" = "#2ca02c",
  "Public Health Agency of Canada" = "#d62728",
  "Fisheries and Oceans Canada" = "#9467bd",
  "Other"  = "#8c564b"
)

# Plot the pie chart
ggplot(buyer_totals_grouped, aes(x = "", y = total_amount, fill = buyer_group)) +
  geom_bar(stat = "identity", width = 1, color = "white") +
  coord_polar(theta = "y") +
  labs(
    title = "Top 5 Buyers by Total Amount Spent and Others",
    fill = "Buyer"
  ) +
  scale_fill_manual(values = buyer_colors) +
  theme_void() + # Removes background, grid, and numeric labels
  theme(
    legend.position = "right",
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold")
  ) +
  geom_text(aes(label = paste0(round(percentage, 1), "%")),
            position = position_stack(vjust = 0.5),
            color = "white",
            size = 4)
```


FIG show how National Defence spending has taken off in recent years, where is 2021 it had not even crested /$5 Billion, but in the last 3 years spending has exploded to /$15 Billion a year.  

```{r fig-mil-spending}
#| message: false
#| echo: false
#| warning: false
#| fig-cap: template
#| fig-align: center

#TODO Make right color

df_filtered <- df %>%
  filter(format(award_date, "%Y") != "2019")

# Convert award_date to Date type and extract the year
df_filtered$award_date <- as.Date(df_filtered$award_date, format = "%Y-%m-%d")
df_filtered$year <- format(df_filtered$award_date, "%Y")

# Filter for military spending (where buyer is "National Defence")
military_df <- df_filtered %>%
  filter(buyer == "National Defence")

# Summarize total spending per year
military_spending_per_year <- military_df %>%
  group_by(year) %>%
  summarize(total_spending = sum(amount, na.rm = TRUE))

# Create the bar chart
ggplot(data = military_spending_per_year, aes(x = year, y = total_spending)) +
  geom_bar(stat = "identity", fill = "steelblue") +
  labs(title = "Military Spending Per Year", x = "Year", y = "Total Spending") +
  theme_minimal() +
  scale_y_continuous(labels = dollar_format(prefix = "$")) +
  theme(plot.title = element_text(hjust = 0.5))

```



Public Services and Procurements Canada is the clearinghouse for the entire federal government. This means they are responsible for managing the procurement process for buyers across the government [REF]. It is important to note that the PSPC sometimes does not publish small contracts, less than /$40,000.  PSPC spending over time shows while military spending increases the rest of the government is taking a hit.
```{r fig-public-spending}
#| message: false
#| echo: false
#| warning: false
#| fig-cap: template
#| fig-align: center

#TODO Make right color

df_filtered <- df %>%
  filter(format(award_date, "%Y") != "2019")

df_filtered$year <- format(df_filtered$award_date, "%Y")

# Filter for military spending (where buyer is "National Defence")
public_services_df <- df_filtered %>%
  filter(buyer == "Public Services and Procurement Canada")

# Summarize total spending per year
public_spending_per_year <- public_services_df %>%
  group_by(year) %>%
  summarize(total_spending = sum(amount, na.rm = TRUE))

# Create the bar chart
ggplot(data = public_spending_per_year, aes(x = year, y = total_spending)) +
  geom_bar(stat = "identity", fill = "steelblue") +
  labs(title = "Public Services Spending Per Year", x = "Year", y = "Total Spending") +
  theme_minimal() +
  scale_y_continuous(labels = dollar_format(prefix = "$")) +
  theme(plot.title = element_text(hjust = 0.5))


```


This FIG shows the top five Buyers spending per year since 2020. In the first 2 years military spending held steady and did not dominate the budget by any means. But since then Defence spending exploded not just nominally but compared to the rest of the budget as well. Notably the Public Health Agency of Canada’s spending while strong in 2020, decreased to nothing over the following four years. The spending in 2020 is linked to purchases of medical equipment, so it is possible they have not needed to invest in new equipment since then. But this illustrates a boarder trend among all departments except National Defence, where their spending has steadily declined in the last 4 years.

```{r fig-top-buyers}
#| message: false
#| echo: false
#| warning: false
#| fig-cap: template
#| fig-align: center

# Filter out records from 2019
df_filtered <- df %>%
  filter(format(award_date, "%Y") != "2019")

# Extract the year from award_date
df_filtered$year <- format(df_filtered$award_date, "%Y")

# Define the selected buyers
selected_buyers <- c(
  "National Defence",
  "Public Services and Procurement Canada",
  "Shared Services Canada",
  "Public Health Agency of Canada",
  "Fisheries and Oceans Canada"
)

# Add a new column for buyer categories
df_filtered <- df_filtered %>%
  mutate(buyer_category = ifelse(buyer %in% selected_buyers, buyer, "Other"))

# Summarize total spending per year for each buyer category
grouped_df <- df_filtered %>%
  group_by(year, buyer_category) %>%
  summarize(total_spending = sum(amount, na.rm = TRUE)) %>%
  ungroup()

# Ensure the order of the groups matches the specified order, with "Other" last
grouped_df$buyer_category <- factor(
  grouped_df$buyer_category,
  levels = c(selected_buyers, "Other")
)

# Scale the total_spending to billions
grouped_df <- grouped_df %>%
  mutate(total_spending_billion = total_spending / 1e9)

# Create the grouped bar chart
ggplot(data = grouped_df, aes(x = year, y = total_spending_billion, fill = buyer_category)) +
  geom_bar(
    stat = "identity",
    position = position_dodge(width = 0.9), # Adjust dodge width
    width = 0.8 # Adjust bar width
  ) +
  scale_fill_manual(
    values = c(
      "National Defence" = "steelblue",
      "Public Services and Procurement Canada" = "orange",
      "Shared Services Canada" = "green",
      "Public Health Agency of Canada" = "purple",
      "Fisheries and Oceans Canada" = "red",
      "Other" = "gray"
    )
  ) +
  scale_y_continuous(
    labels = comma_format(accuracy = 1), # Formats y-axis labels without decimal places
    breaks = pretty_breaks(n = 5), # Ensures approximately 5 breaks like 5, 10, 15
    expand = expansion(mult = c(0, 0.05)) # Adds a small space above the highest bar
  ) +
  labs(
    title = "Spending by Selected and Other Buyers Per Year",
    subtitle = "Amounts are in Billions of CAD",
    x = "Year",
    y = "Total Spending (Billions)",
    fill = "Buyer",
    caption = "."
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
    plot.subtitle = element_text(hjust = 0.5, size = 12),
    axis.text.x = element_text(angle = 45, hjust = 1), # Rotate x-axis labels for readability
    axis.text = element_text(size = 12),
    axis.title = element_text(size = 14),
    legend.title = element_text(size = 14),
    legend.text = element_text(size = 12),
    plot.caption = element_text(hjust = 0.5, size = 10, face = "italic") # Centered caption
  )



```



To find out the firms that are benefiting the most through this procurement process we can look to FIG. Unsurprisingly, the biggest suppliers are primarily are awarded contracts by the military. Interestingly the top supplier, Skyalyne, was only awarded one huge 11.2 Billion contract for fighter pilot training services. This is the largest contract in the dataset. Then considering the largest contracts awarded in the last 3 years to; the F-35 program (Fighter Planes, 4.5 Billion), General Atomics (Airplanes, 1.7 Billion), CAE (Aviation Engineering and Training, 4.4 Billion), Airbus (Airplanes, 3.7 Billion), for a grand total of 25.5 Billion. These large single contracts devoted to advanced fighter jets and training pilots to fly them is part of the reason that military spending has exploded in the last 3 years. The military also paid Vancouver Shipyards 3.4 Billion in 2024 for Ships and Boat parts. 

```{r fig-top-supps}
#| message: false
#| echo: false
#| warning: false
#| fig-cap: template
#| fig-align: center

#TODO Fix colors and supplier names and order of supps (highest to lowest)

# Create the bar chart with legend removed
ggplot(aggregated_df, aes(x = reorder(word, total_amount), y = total_amount, fill = buyer)) +
  geom_bar(stat = "identity") +
  coord_flip() +
  labs(
    title = "Top 10 Suppliers by Aggregated Amount Awarded",
    x = "Supplier",
    y = "Total Amount Awarded"
    # Remove the legend title by not specifying 'fill' in labs
  ) +
  theme_minimal() +
  theme(legend.position = "none")


```

Dettwiler is an engineering firm that provides the Canadian Space Agency with engineering and scientific consulting. Surprisingly 86.3% of the Space Agency’s procurement budget goes to Dettwiler.


## Distribution

This graph represents 81.75% of all contracts, indicating that the vast majority of contracts awarded by the government are quite small. Furthermore, it seems that the number of contracts follows a Pareto distribution. There are 102 contracts that are worth $1, this maybe some legal formality.

```{r fig-distibution}
#| message: false
#| echo: false
#| warning: false
#| fig-cap: template
#| fig-align: center

df_filtered <- df %>%
  filter(amount <= 100000)

# Optional: Check how many rows are left
num_less_than_100k <- nrow(df_filtered)
total_contracts <- nrow(df)

percent_less_than <- num_less_than_100k / total_contracts

print(paste0("Percentage of contracts <= 100,000 CAD: ", round(percent_less_than * 100, 2), "%"))

# Step 2: Create bins spanning every 10,000 CAD up to 100,000
bin_width <- 10000  # 10,000 CAD

# Create a sequence of break points from 0 to 100,000
breaks <- seq(0, 100000, by = bin_width)

# Assign each amount to a bin
df_filtered <- df_filtered %>%
  mutate(amount_bin = cut(amount, breaks = breaks, right = FALSE, include.lowest = TRUE))

# Step 3: Count the number of contracts in each bin
contract_counts_df <- df_filtered %>%
  group_by(amount_bin) %>%
  summarize(Contract_Count = n()) %>%
  ungroup()

# Ensure that all bins are represented, even if count is zero
all_bins <- levels(df_filtered$amount_bin)
contract_counts_df <- contract_counts_df %>%
  right_join(data.frame(amount_bin = all_bins), by = "amount_bin") %>%
  replace_na(list(Contract_Count = 0)) %>%
  arrange(amount_bin)

# Step 4: Create readable labels for x-axis in thousands
contract_counts_df <- contract_counts_df %>%
  mutate(
    # Extract lower and upper bounds from amount_bin
    lower = as.numeric(gsub("\\[|\\)", "", sapply(strsplit(as.character(amount_bin), ","), `[`, 1))),
    upper = as.numeric(gsub("\\[|\\)|\\]", "", sapply(strsplit(as.character(amount_bin), ","), `[`, 2))),
    amount_label = paste0(lower / 1000, "-", upper / 1000, "")
  )

# Step 5: Scale the y-axis counts to thousands if applicable
max_count <- max(contract_counts_df$Contract_Count)
if (max_count >= 1000) {
  contract_counts_df <- contract_counts_df %>%
    mutate(Contract_Count_k = Contract_Count / 1000)
  y_label_unit <- "Thousands"
} else {
  contract_counts_df <- contract_counts_df %>%
    mutate(Contract_Count_k = Contract_Count)  # No scaling
  y_label_unit <- "Number of Contracts"
}

# Step 6: Create the ggplot2 bar chart
ggplot(contract_counts_df, aes(x = amount_label, y = Contract_Count_k)) +
  geom_bar(stat = "identity", fill = "skyblue", color = "black") +
  scale_y_continuous(
    labels = if (max_count >= 1000) {
      label_number(scale = 1, accuracy = 1)
    } else {
      label_number(accuracy = 1)
    },
    expand = expansion(mult = c(0, 0.05))
  ) +
  labs(
    title = "Number of Contracts per 10,000 CAD Award Amount Range",
    x = "Award Amount (Thousands)",
    y = paste0("Number of Contracts ", if (max_count >= 1000) "(Thousands)" else ""),
    caption = "Data includes contracts <= 100,000 CAD."
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
    axis.text.x = element_text(angle = 45, hjust = 1, size = 10),
    axis.text.y = element_text(size = 12),
    axis.title = element_text(size = 14),
    plot.caption = element_text(hjust = 0.5, size = 10, face = "italic")
  )
```

Though most contracts are small contracts (less than $100,000), the sum of these 246,000 contracts is only worth a measly 7.34 Billion. The Skyalyne contract itself outweighs all the small contracts.

```{r fig-small-big}
#| message: false
#| echo: false
#| warning: false
#| fig-cap: template
#| fig-align: center

# Step 1: Create a new column 'contract_size' categorizing contracts
df <- df %>%
  mutate(
    contract_size = ifelse(amount <= 100000, "Small Contracts (≤ 100k)", "Big Contracts (> 100k)")
  )

# Summarize total amount spent per contract size category
total_spent_df <- df %>%
  group_by(contract_size) %>%
  summarize(
    total_amount_spent = sum(amount, na.rm = TRUE)
  ) %>%
  ungroup()

# Convert the total amount to billions of CAD
total_spent_df <- total_spent_df %>%
  mutate(total_amount_billion = total_amount_spent / 1e9)

# Optional: Display the summarized data
print(total_spent_df)

# Create the bar chart
ggplot(total_spent_df, aes(x = contract_size, y = total_amount_billion, fill = contract_size)) +
  geom_bar(stat = "identity", width = 0.6) +
  geom_text(aes(label = paste0(round(total_amount_billion, 2), "B")), 
            vjust = -0.5, 
            size = 5) +  # Adds labels above the bars
  scale_fill_manual(
    values = c("Small Contracts (≤ 100k)" = "steelblue", "Big Contracts (> 100k)" = "tomato")
  ) +
  scale_y_continuous(
    labels = scales::number_format(scale = 1, suffix = "B"),  # Displays y-axis in billions
    expand = expansion(mult = c(0, 0.1))  # Adds space above the bars for labels
  ) +
  labs(
    title = "Total Amount Spent on Contracts",
    subtitle = "Comparison between Small (≤ 100k CAD) and Big (> 100k CAD) Contracts",
    x = "Contract Size",
    y = "Total Amount Spent (Billions of CAD)"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, size = 18, face = "bold"),
    plot.subtitle = element_text(hjust = 0.5, size = 14),
    axis.text.x = element_text(angle = 0, hjust = 0.5, size = 14),
    axis.text.y = element_text(size = 12),
    axis.title = element_text(size = 16),
    legend.position = "none",  # Removes the legend as it's redundant
    plot.caption = element_text(hjust = 0.5, size = 10, face = "italic")
  )
 



```


# Model

TODO What the is the goal of our models

Here we briefly describe the Bayesian analysis model used to investigate... Background details and diagnostics are included in [Appendix -@sec-model-details].

## Model set-up

TODO define variables used and structure

TODO Cite R and packages used to run model


### Model justification

TODO Why I chose those variables

TODO Model Diagnostics

# Results

TODO Add model summary tables

```{r fig-results}
#| message: false
#| echo: false
#| warning: false
#| fig-cap: template
#| fig-align: center

# Tidy up the model results
model_tidy <- model %>% tidy() %>% mutate(model = "Excluding Military Contracts")
mil_model_tidy <- mil_model %>% tidy() %>% mutate(model = "Military Contracts Only")

# Combine the results into one table
combined_results <- bind_rows(model_tidy, mil_model_tidy)

combined_results <- combined_results %>%
  mutate(
    term = case_when(
      term == "(Intercept)" ~ "Intercept",
      term == "baseline_days" ~ "Baseline Days",
      term == "duration_days" ~ "Duration Days",
      TRUE ~ term # Keep any other terms as-is
    )
  )

# Format the table for Quarto using kableExtra
combined_results %>%
  select(model, term, estimate, std.error, statistic, p.value) %>%
  rename(
    Model = model,
    Term = term,
    Estimate = estimate,
    `Std. Error` = std.error,
    `t-Statistic` = statistic,
    `p-Value` = p.value
  ) %>%
  kable(format = "html", digits = 3, align = "c", caption = "Model Results Summary") %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE)

```


# Discussion

## First discussion point {#sec-first-point}

TODO What was done

## Second discussion point

TODO What did we learn about Canada
    Military spending has exploded in the last couple of years, and other departments have fallen significantly
    The vast majority of contracts are smaller than 200,000, and the most common size of contract is between 10-20k

## Third discussion point


## Weaknesses

TODO Model was weak, need more data to improve model
    Analysis on the Suppliers Names needs to be more rigorous


## Next Steps

TODO Next Steps: Need to collect more data:
      From Past spending beyond 2020
      Other types of Government Spending; Seeing how much of spending is done through private contracts and how much through in house spending on salaries and other things like that
      Do analysis on the what the contracts descriptions say
      Why does public health Canada spending go to zero
      Why are contracts so small


\newpage

\appendix

# Appendix {-}

# Web Scraping

These are step by step instructions on how to Web Scrape the IFJ procurement data page, because as of November 2024 there is no easy/automated way of downloading the 330 pages of data.

Note: It is important that docker, java, python and Firefox are installed on your machine as RSelenium requires these packages. To download Selenium and create a docker image, open the docker application and search for the Selenium package for the browser you wish to use, in this case Firefox.

1. Run a compatible Selenium docker image. You must make sure that the version of Selenium you are using is compatible with Firefox or whichever browser you choose. You must launch docker from your terminal whose directory matches that of the r file’s path to 01-download_data.R . You can check if the docker image has successfully been launched using the docker application's nice GUI. It is also important in this step to define the path of the local directory that the data should be saved into, this is shown as USER_PATH in the script. 

Terminal Command: 

user:canadian_gov_procurement USER_PATH$ docker run -d -p 4444:4444 -p 5900:5900 -v /USER_PATH/canadian_gov_procurement/data/raw_data:/home/seluser/Downloads selenium/standalone-firefox:3.141.59 

2. It is possible that the tags used to find the buttons on the web-site may change over time. So visit the IJF procurement data website and right click and inspect the download and next page buttons. This code uses the aria labels to locate these buttons, but there are many ways to identify them using html and css elements. 

3. Now the 01-down-load-data.R file can be executed. Be sure to modify USER_PATH in both to download_dir and host_down_load_dir to match the path of you docker and personal computer path. 

4. The for-loop simply runs "click download -> click next page" process 329 times, however IJF may add more pages so modify total_pages to scrape the number of pages IJF is offering. In the event of an error mid-way through scraping take note of which page failed to download (page that you are on is printed to the console) and simply set the start of the for-loop. After restarting the loop be sure to verify that the next downloaded page is the correct one, otherwise you will have to restart the process from step 1. While it may be tempting to reduce the Sys.sleep times to download faster (11 seconds delay per loop and 329 loops that's about 1 hour!), I found reducing the time cause errors as the pages were slow to load and thus ruining the process.

5. Done!

# Additional data details

TODO Removal of negative values, adding 1 day to contract lengths of 0, see cleaning script


# Proccessing Supplier

TODO processed_supplier
Talk about what I did thourougly

Talk about next steps. 11th top supplier, and how there are still tons of useless words in there. Even how to approach I used may never work. Because at some point we will ban too many word and some suppliers with super generic names will be eliminated entirely.

Propose alternate methods

# Model details {#sec-model-details}

## Diagnostics

TODO Add Diagnostics

\newpage


# References

TODO Ref:

RSelenuim
VGAM
stringr
dplyr
tidyverse
zoo
kableExtra
knitr
scales
lubridate
ggplot2
rvest
readr
testthat
