---
title: "Procurements of the Canadian Government, Runaway Military Contracts"
author: 
  - Robert Ford
thanks: "Code and data are available at: https://github.com/Ford-Robert"
date: today
date-format: long
abstract: "First sentence. Second sentence. Third sentence. Fourth sentence."
format: pdf
number-sections: true
bibliography: references.bib
---

```{r}
#| include: false
#| warning: false
#| message: false

library(tidyverse)
library(ggplot2)
library(dplyr)
library(lubridate)
library(scales)
library(knitr)
library(kableExtra)
library(zoo)

df <- read_csv(here::here("data/analysis_data/cleaned_data.csv"))
aggregated_df <- read_csv(here::here("data/analysis_data/top_ten_suppliers.csv"))
models <- read_csv(here::here("models/buyer_models.rds"))

View(df)
```


# Introduction

TODO Broader context of Canadian spending, talk about huge new military spending package announced this year

TODO What are procurement, how are they awarded, what are Buyers and Suppliers

TODO Gap that needs to be filled; What is the Government buying from private companies and how is their consumption changing over time

TODO What was done

TODO What was found

TODO Why is it important

TODO Paper layout, description of each section with jump links

TODO Cite R and all other packages

Estimand?

# Data {#sec-data}

TODO Description of each variable head of table
```{r fig-head}
#| message: false
#| echo: false
#| warning: false
#| fig-cap: template
#| fig-align: center

df_table <- df %>% select(-contract, -start_date, -end_date)

kable(head(df_table, 5), caption = "Sample of the Data") %>%
  kable_styling(font_size = 10, latex_options = c("scale_down"))

```

TODO Brief talk about how cleaning was carried out

TODO Description of variables that were created, duration_days, processed_supplier (brief, see appendix)

## Shape

TODO Talk about top 5 buyers and other

```{r fig-pie-buyers}
#| message: false
#| echo: false
#| warning: false
#| fig-cap: Top 5 Buyers by Total Amount Spent and Others (Pie Chart)
#| fig-align: center


# Summarize total amount spent by each buyer
buyer_totals <- df %>%
  group_by(buyer) %>%
  summarise(total_amount = sum(amount, na.rm = TRUE)) %>%
  arrange(desc(total_amount))

# Identify the top 5 buyers
top_five_buyers <- buyer_totals %>%
  slice_head(n = 5) %>%
  pull(buyer)

# Create a new column 'buyer_group' where buyers not in top 5 are labeled as 'Other'
buyer_totals_grouped <- buyer_totals %>%
  mutate(buyer_group = ifelse(buyer %in% top_five_buyers, buyer, "Other")) %>%
  group_by(buyer_group) %>%
  summarise(total_amount = sum(total_amount, na.rm = TRUE)) %>%
  arrange(desc(total_amount)) %>%
  mutate(percentage = total_amount / sum(total_amount) * 100)

# TODO: Assign specific colors to each buyer group
# Example color assignments (replace with desired colors)
buyer_colors <- c(
  "National Defence" = "#1f77b4",
  "Public Services and Procurement Canada" = "#ff7f0e",
  "Shared Services Canada" = "#2ca02c",
  "Public Health Agency of Canada" = "#d62728",
  "Fisheries and Oceans Canada" = "#9467bd",
  "Other"  = "#8c564b"
)

# Plot the pie chart
ggplot(buyer_totals_grouped, aes(x = "", y = total_amount, fill = buyer_group)) +
  geom_bar(stat = "identity", width = 1, color = "white") +
  coord_polar(theta = "y") +
  labs(
    title = "Top 5 Buyers by Total Amount Spent and Others",
    fill = "Buyer"
  ) +
  scale_fill_manual(values = buyer_colors) +
  theme_void() + # Removes background, grid, and numeric labels
  theme(
    legend.position = "right",
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold")
  ) +
  geom_text(aes(label = paste0(round(percentage, 1), "%")),
            position = position_stack(vjust = 0.5),
            color = "white",
            size = 4)
```


TODO Military Spending Per year
```{r fig-mil-spending}
#| message: false
#| echo: false
#| warning: false
#| fig-cap: template
#| fig-align: center

#TODO Make right color

df_filtered <- df %>%
  filter(format(award_date, "%Y") != "2019")

# Convert award_date to Date type and extract the year
df_filtered$award_date <- as.Date(df_filtered$award_date, format = "%Y-%m-%d")
df_filtered$year <- format(df_filtered$award_date, "%Y")

# Filter for military spending (where buyer is "National Defence")
military_df <- df_filtered %>%
  filter(buyer == "National Defence")

# Summarize total spending per year
military_spending_per_year <- military_df %>%
  group_by(year) %>%
  summarize(total_spending = sum(amount, na.rm = TRUE))

# Create the bar chart
ggplot(data = military_spending_per_year, aes(x = year, y = total_spending)) +
  geom_bar(stat = "identity", fill = "steelblue") +
  labs(title = "Military Spending Per Year", x = "Year", y = "Total Spending") +
  theme_minimal() +
  scale_y_continuous(labels = dollar_format(prefix = "$")) +
  theme(plot.title = element_text(hjust = 0.5))

```



TODO Public Services Spending
```{r fig-public-spending}
#| message: false
#| echo: false
#| warning: false
#| fig-cap: template
#| fig-align: center

#TODO Make right color

df_filtered <- df %>%
  filter(format(award_date, "%Y") != "2019")

df_filtered$year <- format(df_filtered$award_date, "%Y")

# Filter for military spending (where buyer is "National Defence")
public_services_df <- df_filtered %>%
  filter(buyer == "Public Services and Procurement Canada")

# Summarize total spending per year
public_spending_per_year <- public_services_df %>%
  group_by(year) %>%
  summarize(total_spending = sum(amount, na.rm = TRUE))

# Create the bar chart
ggplot(data = public_spending_per_year, aes(x = year, y = total_spending)) +
  geom_bar(stat = "identity", fill = "steelblue") +
  labs(title = "Public Services Spending Per Year", x = "Year", y = "Total Spending") +
  theme_minimal() +
  scale_y_continuous(labels = dollar_format(prefix = "$")) +
  theme(plot.title = element_text(hjust = 0.5))


```


TODO add spending by selected buyers graph
```{r fig-top-buyers}
#| message: false
#| echo: false
#| warning: false
#| fig-cap: template
#| fig-align: center

# Filter out records from 2019
df_filtered <- df %>%
  filter(format(award_date, "%Y") != "2019")

# Extract the year from award_date
df_filtered$year <- format(df_filtered$award_date, "%Y")

# Define the selected buyers
selected_buyers <- c(
  "National Defence",
  "Public Services and Procurement Canada",
  "Shared Services Canada",
  "Public Health Agency of Canada",
  "Fisheries and Oceans Canada"
)

# Add a new column for buyer categories
df_filtered <- df_filtered %>%
  mutate(buyer_category = ifelse(buyer %in% selected_buyers, buyer, "Other"))

# Summarize total spending per year for each buyer category
grouped_df <- df_filtered %>%
  group_by(year, buyer_category) %>%
  summarize(total_spending = sum(amount, na.rm = TRUE)) %>%
  ungroup()

# Ensure the order of the groups matches the specified order, with "Other" last
grouped_df$buyer_category <- factor(
  grouped_df$buyer_category,
  levels = c(selected_buyers, "Other")
)

# Scale the total_spending to billions
grouped_df <- grouped_df %>%
  mutate(total_spending_billion = total_spending / 1e9)

# Create the grouped bar chart
ggplot(data = grouped_df, aes(x = year, y = total_spending_billion, fill = buyer_category)) +
  geom_bar(
    stat = "identity",
    position = position_dodge(width = 0.9), # Adjust dodge width
    width = 0.8 # Adjust bar width
  ) +
  scale_fill_manual(
    values = c(
      "National Defence" = "steelblue",
      "Public Services and Procurement Canada" = "orange",
      "Shared Services Canada" = "green",
      "Public Health Agency of Canada" = "purple",
      "Fisheries and Oceans Canada" = "red",
      "Other" = "gray"
    )
  ) +
  scale_y_continuous(
    labels = comma_format(accuracy = 1), # Formats y-axis labels without decimal places
    breaks = pretty_breaks(n = 5), # Ensures approximately 5 breaks like 5, 10, 15
    expand = expansion(mult = c(0, 0.05)) # Adds a small space above the highest bar
  ) +
  labs(
    title = "Spending by Selected and Other Buyers Per Year",
    subtitle = "Amounts are in Billions of CAD",
    x = "Year",
    y = "Total Spending (Billions)",
    fill = "Buyer",
    caption = "."
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
    plot.subtitle = element_text(hjust = 0.5, size = 12),
    axis.text.x = element_text(angle = 45, hjust = 1), # Rotate x-axis labels for readability
    axis.text = element_text(size = 12),
    axis.title = element_text(size = 14),
    legend.title = element_text(size = 14),
    legend.text = element_text(size = 12),
    plot.caption = element_text(hjust = 0.5, size = 10, face = "italic") # Centered caption
  )



```



TODO Top Ten Suppliers
```{r fig-top-supps}
#| message: false
#| echo: false
#| warning: false
#| fig-cap: template
#| fig-align: center

#TODO Fix colors and supplier names

# Create the bar chart with legend removed
ggplot(aggregated_df, aes(x = reorder(word, total_amount), y = total_amount, fill = buyer)) +
  geom_bar(stat = "identity") +
  coord_flip() +
  labs(
    title = "Top 10 Suppliers by Aggregated Amount Awarded",
    x = "Supplier",
    y = "Total Amount Awarded"
    # Remove the legend title by not specifying 'fill' in labs
  ) +
  theme_minimal() +
  theme(legend.position = "none")


```
TODO mention that detwiler makes up 88+% spending of the Space Agency

TODO add pie chart showing top suppliers and other of National defence spending

TODO add small contracts distribution chart


## Measurement

TODO How IJF collected all this data

T


# Model

TODO What the is the goal of our models

Here we briefly describe the Bayesian analysis model used to investigate... Background details and diagnostics are included in [Appendix -@sec-model-details].

## Model set-up

TODO define variables used and structure

TODO Cite R and packages used to run model


### Model justification

TODO Why I chose those variables

TODO Model Diagnostics

# Results

TODO Add model summary tables




# Discussion

## First discussion point {#sec-first-point}

TODO What was done

## Second discussion point

TODO What did we learn about Canada
    Military spending has exploded in the last couple of years, and other departments have fallen significantly
    The vast majority of contracts are smaller than 200,000, and the most common size of contract is between 10-20k

## Third discussion point


## Weaknesses

TODO Model was weak, need more data to improve model
    Analysis on the Suppliers Names needs to be more rigorous


## Next Steps

TODO Next Steps: Need to collect more data:
      From Past spending beyond 2020
      Other types of Government Spending; Seeing how much of spending is done through private contracts and how much through in house spending on salaries and other things like that
      Do analysis on the what the contracts descriptions say
      Why does public health Canada spending go to zero
      Why are contracts so small


\newpage

\appendix

# Appendix {-}

# Web Scraping

These are step by step instructions on how to Web Scrape the IFJ procurement data page, because as of November 2024 there is no easy/automated way of downloading the 330 pages of data.

Note: It is important that docker, java, python and Firefox are installed on your machine as RSelenium requires these packages. To download Selenium and create a docker image, open the docker application and search for the Selenium package for the browser you wish to use, in this case Firefox.

1. Run a compatible Selenium docker image. You must make sure that the version of Selenium you are using is compatible with Firefox or whichever browser you choose. You must launch docker from your terminal whose directory matches that of the r file’s path to 01-download_data.R . You can check if the docker image has successfully been launched using the docker application's nice GUI. It is also important in this step to define the path of the local directory that the data should be saved into, this is shown as USER_PATH in the script. 

Terminal Command: 

user:canadian_gov_procurement USER_PATH$ docker run -d -p 4444:4444 -p 5900:5900 -v /USER_PATH/canadian_gov_procurement/data/raw_data:/home/seluser/Downloads selenium/standalone-firefox:3.141.59 

2. It is possible that the tags used to find the buttons on the web-site may change over time. So visit the IJF procurement data website and right click and inspect the download and next page buttons. This code uses the aria labels to locate these buttons, but there are many ways to identify them using html and css elements. 

3. Now the 01-down-load-data.R file can be executed. Be sure to modify USER_PATH in both to download_dir and host_down_load_dir to match the path of you docker and personal computer path. 

4. The for-loop simply runs "click download -> click next page" process 329 times, however IJF may add more pages so modify total_pages to scrape the number of pages IJF is offering. In the event of an error mid-way through scraping take note of which page failed to download (page that you are on is printed to the console) and simply set the start of the for-loop. After restarting the loop be sure to verify that the next downloaded page is the correct one, otherwise you will have to restart the process from step 1.

5. Done!


# Additional data details

TODO Removal of negative values, adding 1 day to contract lengths of 0, see cleaning script

TODO processed_supplier

# Model details {#sec-model-details}

## Diagnostics

TODO Add Diagnostics

\newpage


# References

TODO Ref:

RSelenuim
VGAM
stringr
dplyr
tidyverse
zoo
kableExtra
knitr
scales
lubridate
ggplot2
rvest
readr
testthat
