---
title: "Procurements of the Canadian Government, Runaway Military Contracts"
author: 
  - Robert Ford
thanks: "Code and data are available at: https://github.com/Ford-Robert"
date: today
date-format: long
abstract: "First sentence. Second sentence. Third sentence. Fourth sentence."
format: pdf
number-sections: true
bibliography: references.bib
---

```{r}
#| include: false
#| warning: false
#| message: false

library(tidyverse)
library(ggplot2)
library(dplyr)
library(lubridate)
library(scales)
library(knitr)
library(kableExtra)
library(zoo)
library(broom)
library(car)
library(caret)

df <- read_csv(here::here("data/analysis_data/cleaned_data.csv"))
aggregated_df <- read_csv(here::here("data/analysis_data/top_ten_suppliers.csv"))
model <- read_rds(here::here("models/gen_model.rds"))
mil_model <- read_rds(here::here("models/mil_model.rds"))


#colors!
def_c <- "#fb8072"
fish_c <- "#80b1d3"
health_c <- "#4daf4a"
services_c <- "#fdb462"
public_c <- "#bebada"
space_c <- "#ffffb3"


```

\newpage

# Introduction

In recent years, Canada's federal spending landscape has undergone significant transformations, particularly with a marked increase in military expenditures. The government has announced substantial new military spending packages, [REF] 

Federal procurements involve the acquisition of goods and services by government departments, Buyers, from companies, Suppliers. These procurements are essential for a wide range of government functions from; acquiring defense equipment, building infrastructure, procuring healthcare supplies, technological services and engineering consultants for example. This paper will analyse federal procurement data to dissect government procurements over the last four years. 

The primary questions this paper aims to address are: What is the government buying? Who are the primary suppliers? How are spending patterns shifting across different departments and over time? 

I collected and processed detailed data on over 301,000 contracts awarded since January 2020. The dataset includes variables such as contract amounts, durations, award dates, Buyers, and Suppliers. We derived additional metrics to facilitate our analysis, such as Baseline Days (the number of days since January 1, 2020) and Duration Days (the length of each contract), and standardized supplier names to ensure consistency. 

Some significant findings presented in this paper include: military procurement spending has surged in the past few years. Where the Department of National Defence now dominates federal procurement spending, with expenditures exceeding $56 billion since 2020. This increase in spending is in part thanks to large contracts, including a $11.2 billion contract to SkyAlyne for fighter pilot training—the largest in our dataset—and multi-billion-dollar contracts for fighter jets and naval vessels. 

While  other government departments have experienced a notable decrease in procurement spending. For instance, the Public Health Agency of Canada's spending, which was substantial in 2020 due to the COVID-19 pandemic, has declined significantly in subsequent years. 

These findings are important for several reasons. They provide critical insights into how government spending priorities are shifting, which has implications for economic policy, industry stakeholders, and public transparency. Understanding the concentration of spending in large military contracts can inform discussions on national defense strategies, budget allocations, and the impact on domestic industries. 

The paper is structured as follows: [Section 2] details the data collection and processing methodologies, including the sources of procurement data and the steps taken to clean and standardize the dataset. Then I present a series of graphs to demonstrate government procurements from various angles. [Section 3] describes the linear regression models used to assess trends in contract amounts over time and contract duration. [Section 4] presents the results of the analysis, highlighting key trends in military and non-military procurement spending. [Section 5] discusses the limitations of the study, including data constraints and methodological considerations, and suggests areas for future research. Finally, Section 6 concludes with a summary of the findings and their implications for policymakers, industry stakeholders, and future studies. 

By providing a comprehensive analysis of federal procurement spending, this paper aims to fill the existing gap in understanding how government consumption of private sector goods and services is changing over time. The insights gained from this study can inform policy decisions, contribute to academic discourse, and enhance transparency regarding government spending practices. 


TODO Cite R and all other packages

TODO Estimand?

\newpage

# Data {#sec-data}

The data was collected using R and other packages [REF]. A web scraping script was used to collect all Federal Award Data from the IJF [REF]. The variables this paper focuses collected from the IJF are; Contract, Buyer, Supplier, Amount, Award Date, Start Date, and End Date.  

- **Contract**: A few words detailing a brief description of what the contract signed was for.
- **Buyer**: The name of the government department who awarded the contract.
- **Supplier**: The name of the company that fulfilled the contract by agreeing to provide the good or service to the Buyer.
- **Amount**: The value of the contract in Canadian Dollars.
- **Award Date**: The day the Buyer awarded the contract to the supplier.
- **Start Date**: When the contract is due to start.
- **End Date**: When the contract is due to end.

The head of the IFJ Database:
```{r fig-head1}
#| message: false
#| echo: false
#| warning: false
#| fig-cap: Sample of the Data
#| fig-align: center
#| fig-pos: "H"

df_table1 <- df %>%
  select(
    Contract = contract,
    Buyer = buyer,
    Supplier = supplier,
    Amount = amount,
    `Award Date` = award_date,
    `Start Date` = start_date,
    `End Date` = end_date
  ) %>%
  mutate(
    Amount = comma(Amount)  # Format Amount with commas
  )


df_table1_truncated <- df_table1 %>%
  mutate(across(where(is.character), ~ str_trunc(., 15, side = "right", ellipsis = "...")))

# Display the first table
kable(head(df_table1_truncated, 5)) %>%
  kable_styling(
    font_size = 10,
    latex_options = c("scale_down")
  )


```

Additional Derived Variables:

- **Baseline Days**: Number of days since 1st January 2020.
- **Duration Days**: End Date subtracted from the Start Date to calculate the duration of the contract.
- **Processed Supplier**: The name of suppliers regularized to allow for aggregation and comparison.

```{r fig-head2}
#| message: false
#| echo: false
#| warning: false
#| fig-cap: Sample of Derived Data
#| fig-align: center
#| fig-pos: "H"

df_table2 <- df %>%
  select(
    `Baseline Days` = baseline_days,
    `Duration Days` = duration_days,
    `Processed Supplier` = processed_supplier
  ) %>%
  mutate(
    `Baseline Days` = comma(`Baseline Days`),  # Format Baseline Days with commas
    `Duration Days` = comma(`Duration Days`)   # Format Duration Days with commas
  )

# Truncate character columns if necessary
df_table2_truncated <- df_table2 %>%
  mutate(across(where(is.character), ~ str_trunc(., 15, side = "right", ellipsis = "...")))

# Display the second table
kable(head(df_table2_truncated, 5)) %>%
  kable_styling(
    font_size = 10,
    latex_options = c("scale_down")
  )

```

Processed Supplier is required as many companies have slightly different spellings, such as [“General Dynamics”, “GENERAL DYNAMICS”, “General Dynamics Mission Systems”, “GENERAL DYNAMICS MISSION SYSTEMS INC”]. See Appendix TODO for how I processed and regularized the suppliers.

The data was then cleaned. First I began by setting each variable to the correct data type. Then I removed any data point where Amount was negative or zero, because I am not sure what a negative amount means in this context and contracts that are not worth anything are not worth looking at. There were a number of contracts which started and ended on the same day, to simplify later calculation I simply added a day to their End Date, figuring that same day contracts are equivalent to one day contracts. Further data cleaning details are available in Appendix TODO. After cleaning I was left with 301,094 contracts spanning TODO to TODO.

## Measurement

The data is recorded and published through various government agencies, who use different accounting standards and procedures. The three sources IFJ used to collect the federal procurement data are; Canada Buys, Buy and Sell, and Proactive Disclosures (which makes up the vast majority of the procurement data). However, because the data used in this paper is pulled from the IFJ’s Federal Awards page this data comes exclusively from the Proactive Disclosures. The Treasury Board of Canada Secretariat is responsible for publishing these Proactive Disclosures under the Access to Information Act [REF].

## Analysis

This is a break down of total amount awarded by the top 5 biggest spending Buyers. The Other category consists the of the total awards given by the remaining 88 smallest Government Buyers.  It is clear that National Defence dwarfs the procurement budget, spending over /$56 Billion on procurements since 2020. 

```{r fig-pie-buyers}
#| message: false
#| echo: false
#| warning: false
#| fig-cap: Top 5 Buyers by Total Amount Spent and Others
#| fig-align: center
#| fig-pos: "H"

# Summarize total amount spent by each buyer
buyer_totals <- df %>%
  group_by(buyer) %>%
  summarise(total_amount = sum(amount, na.rm = TRUE)) %>%
  arrange(desc(total_amount))

# Identify the top 5 buyers
top_five_buyers <- buyer_totals %>%
  slice_head(n = 5) %>%
  pull(buyer)

# Create a new column 'buyer_group' where buyers not in top 5 are labeled as 'Other'
buyer_totals_grouped <- buyer_totals %>%
  mutate(buyer_group = ifelse(buyer %in% top_five_buyers, buyer, "Other")) %>%
  group_by(buyer_group) %>%
  summarise(total_amount = sum(total_amount, na.rm = TRUE)) %>%
  arrange(desc(total_amount)) %>%
  mutate(percentage = total_amount / sum(total_amount) * 100)

# TODO: Assign specific colors to each buyer group
# Example color assignments (replace with desired colors)
buyer_colors <- c(
  "National Defence" = def_c,
  "Public Services and Procurement Canada" = public_c,
  "Shared Services Canada" = services_c,
  "Public Health Agency of Canada" = health_c,
  "Fisheries and Oceans Canada" = fish_c,
  "Other"  = "gray"
)

# Plot the pie chart
ggplot(buyer_totals_grouped, aes(x = "", y = total_amount, fill = buyer_group)) +
  geom_bar(stat = "identity", width = 1, color = "white") +
  coord_polar(theta = "y") +
  labs(
    fill = "Buyer"
  ) +
  scale_fill_manual(values = buyer_colors) +
  theme_void() + # Removes background, grid, and numeric labels
  theme(
    legend.position = "right",
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold")
  ) +
  geom_text(aes(label = paste0(round(percentage, 1), "%")),
            position = position_stack(vjust = 0.5),
            color = "white",
            size = 2.5)
```


FIG show how National Defence spending has taken off in recent years, where is 2021 it had not even crested /$5 Billion, but in the last 3 years spending has exploded to /$15 Billion a year.  

```{r fig-mil-spending}
#| message: false
#| echo: false
#| warning: false
#| fig-cap: Military Spending Per Year in Billions
#| fig-align: center
#| fig-pos: "H"

#TODO Make right color

df_filtered <- df %>%
  filter(format(award_date, "%Y") != "2019")

# Convert award_date to Date type and extract the year
df_filtered$award_date <- as.Date(df_filtered$award_date, format = "%Y-%m-%d")
df_filtered$year <- format(df_filtered$award_date, "%Y")

# Filter for military spending (where buyer is "National Defence")
military_df <- df_filtered %>%
  filter(buyer == "National Defence")



military_spending_per_year <- military_df %>%
  group_by(year) %>%
  summarize(total_spending = sum(amount, na.rm = TRUE) / 1e9)

# Create the bar chart
ggplot(data = military_spending_per_year, aes(x = year, y = total_spending)) +
  geom_bar(stat = "identity", fill = def_c) +
  labs(x = "Year", y = "Total Spending (Billions)") +
  theme_minimal() +
  scale_y_continuous() +
  theme(plot.title = element_text(hjust = 0.5))

```



Public Services and Procurements Canada is the clearinghouse for the entire federal government. This means they are responsible for managing the procurement process for buyers across the government [REF]. It is important to note that the PSPC sometimes does not publish small contracts, less than /$40,000.  PSPC spending over time shows while military spending increases the rest of the government is taking a hit.
```{r fig-public-spending}
#| message: false
#| echo: false
#| warning: false
#| fig-cap: Public Services Spending Per Year in Billions
#| fig-align: center
#| fig-pos: "H"

#TODO Make right color

df_filtered <- df %>%
  filter(format(award_date, "%Y") != "2019")

df_filtered$year <- format(df_filtered$award_date, "%Y")

# Filter for military spending (where buyer is "National Defence")
public_services_df <- df_filtered %>%
  filter(buyer == "Public Services and Procurement Canada")

# Summarize total spending per year
public_spending_per_year <- public_services_df %>%
  group_by(year) %>%
  summarize(total_spending = sum(amount, na.rm = TRUE)  / 1e9 )

# Create the bar chart
ggplot(data = public_spending_per_year, aes(x = year, y = total_spending)) +
  geom_bar(stat = "identity", fill = public_c) +
  labs(x = "Year", y = "Total Spending (Billions)") +
  theme_minimal() +
  scale_y_continuous() +
  theme(plot.title = element_text(hjust = 0.5))


```


This FIG shows the top five Buyers spending per year since 2020. In the first 2 years military spending held steady and did not dominate the budget by any means. But since then Defence spending exploded not just nominally but compared to the rest of the budget as well. Notably the Public Health Agency of Canada’s spending while strong in 2020, decreased to nothing over the following four years. The spending in 2020 is linked to purchases of medical equipment, so it is possible they have not needed to invest in new equipment since then. But this illustrates a boarder trend among all departments except National Defence, where their spending has steadily declined in the last 4 years.

```{r fig-top-buyers}
#| message: false
#| echo: false
#| warning: false
#| fig-cap: Spending by Top 5 Buyers and Others Per Year
#| fig-align: center
#| fig-pos: "H"

# Filter out records from 2019
df_filtered <- df %>%
  filter(format(award_date, "%Y") != "2019")

# Extract the year from award_date
df_filtered$year <- format(df_filtered$award_date, "%Y")

# Define the selected buyers
selected_buyers <- c(
  "National Defence",
  "Public Services and Procurement Canada",
  "Shared Services Canada",
  "Public Health Agency of Canada",
  "Fisheries and Oceans Canada"
)

# Add a new column for buyer categories
df_filtered <- df_filtered %>%
  mutate(buyer_category = ifelse(buyer %in% selected_buyers, buyer, "Other"))

# Summarize total spending per year for each buyer category
grouped_df <- df_filtered %>%
  group_by(year, buyer_category) %>%
  summarize(total_spending = sum(amount, na.rm = TRUE)) %>%
  ungroup()

# Ensure the order of the groups matches the specified order, with "Other" last
grouped_df$buyer_category <- factor(
  grouped_df$buyer_category,
  levels = c(selected_buyers, "Other")
)

# Scale the total_spending to billions
grouped_df <- grouped_df %>%
  mutate(total_spending_billion = total_spending / 1e9)

# Create the grouped bar chart
ggplot(data = grouped_df, aes(x = year, y = total_spending_billion, fill = buyer_category)) +
  geom_bar(
    stat = "identity",
    position = position_dodge(width = 0.9), # Adjust dodge width
    width = 0.8 # Adjust bar width
  ) +
  scale_fill_manual(
    values = c(
  "National Defence" = def_c,
  "Public Services and Procurement Canada" = public_c,
  "Shared Services Canada" = services_c,
  "Public Health Agency of Canada" = health_c,
  "Fisheries and Oceans Canada" = fish_c,
  "Other"  = "gray"
    ),
  guide = guide_legend(nrow = 3)
  ) +
  scale_y_continuous(
    labels = comma_format(accuracy = 1),
    breaks = pretty_breaks(n = 5),
    expand = expansion(mult = c(0, 0.05))
  ) +
  labs(
    x = "Year",
    y = "Total Spending (Billions)",
    fill = "Buyer",
    caption = "."
  ) +
  theme_minimal() +
  theme(legend.position = "bottom"
  )



```



To find out the firms that are benefiting the most through this procurement process we can look to FIG. Unsurprisingly, the biggest suppliers are primarily are awarded contracts by the military. Interestingly the top supplier, Skyalyne, was only awarded one huge 11.2 Billion contract for fighter pilot training services. This is the largest contract in the dataset. Then considering the largest contracts awarded in the last 3 years to; the F-35 program (Fighter Planes, 4.5 Billion), General Atomics (Airplanes, 1.7 Billion), CAE (Aviation Engineering and Training, 4.4 Billion), Airbus (Airplanes, 3.7 Billion), for a grand total of 25.5 Billion. These large single contracts devoted to advanced fighter jets and training pilots to fly them is part of the reason that military spending has exploded in the last 3 years. The military also paid Vancouver Shipyards 3.4 Billion in 2024 for Ships and Boat parts. 

```{r fig-top-supps}
#| message: false
#| echo: false
#| warning: false
#| fig-cap: Top 10 Suppliers by Total Amount Awarded
#| fig-align: center
#| fig-pos: "H"

# Create a custom mapping for supplier renaming
supplier_rename <- c(
  "cae" = "CAE", 
  "skyalyne" = "Skyalyne", 
  "vancouver shipyards" = "Vancouver Shipyards", 
  "f35" = "F-35 Joint Program", 
  "bell" = "Bell", 
  "airbus" = "Airbus", 
  "textron" = "Textron Avaition", 
  "dynamics" = "General Dynamics",
  "dettwiler" = "Dettwiler and Associates", 
  "atomics" = "Atomics Aeronautical Systems"
)

selected_buyers <- c(
  "National Defence", 
  "Canadian Space Agency", 
  "Shared Services Canada", 
  "Public Health Agency of Canada", 
  "Fisheries and Oceans Canada"
)


# Adjust the dataframe with supplier renaming
aggregated_df <- aggregated_df %>%
  mutate(word = ifelse(word %in% names(supplier_rename), supplier_rename[word], word))

aggregated_totals <- aggregated_df %>%
  group_by(word) %>%
  summarise(total_amount = sum(total_amount, na.rm = TRUE)) %>%
  arrange(desc(total_amount))

# Merge total aggregated amounts back into aggregated_df
aggregated_df <- aggregated_df %>%
  left_join(aggregated_totals, by = "word", suffix = c("", "_total"))

# Get the top 10 suppliers
top_suppliers <- aggregated_totals %>%
  top_n(10, total_amount)

# Filter aggregated_df to include only the top 10 suppliers
aggregated_df_top10 <- aggregated_df %>%
  filter(word %in% top_suppliers$word)

# Use this ordering in the plot
# Use this ordering in the plot (reversed order)
ggplot(aggregated_df_top10, aes(x = reorder(word, total_amount_total), y = total_amount / 1e9, fill = buyer)) +
  geom_bar(stat = "identity") +
  coord_flip() +
  labs(
    x = "Supplier",
    y = "Total Amount Awarded (in Billions)",
    fill = "Buyer"
  ) +
  scale_y_continuous(labels = scales::comma) +  # Format y-axis with commas
  scale_fill_manual(
    values = c(
      "National Defence" = def_c, 
      "Canadian Space Agency" = space_c, 
      "Shared Services Canada" = services_c, 
      "Public Health Agency of Canada" = health_c, 
      "Fisheries and Oceans Canada" = fish_c,
      "Other" = "gray"  # Assign a default color for other buyers if necessary
        ), 
    breaks = selected_buyers,
    guide = guide_legend(nrow = 2)
  ) +
  theme_minimal() +
  theme(
    legend.position = "bottom"  # Positions the legend on the right
  )





```

Dettwiler is an engineering firm that provides the Canadian Space Agency with engineering and scientific consulting. Surprisingly 86.3% of the Space Agency’s procurement budget goes to Dettwiler.


## Distribution

This graph represents 81.75% of all contracts, indicating that the vast majority of contracts awarded by the government are quite small. Furthermore, it seems that the number of contracts follows a Pareto distribution. There are 102 contracts that are worth $1, this maybe some legal formality.

```{r fig-distibution}
#| message: false
#| echo: false
#| warning: false
#| fig-cap: Distribution of Contracts that are less than $100,000
#| fig-align: center

df_filtered <- df %>%
  filter(amount <= 100000)

# Optional: Check how many rows are left
num_less_than_100k <- nrow(df_filtered)
total_contracts <- nrow(df)

percent_less_than <- num_less_than_100k / total_contracts

# Step 2: Create bins spanning every 10,000 CAD up to 100,000
bin_width <- 10000  # 10,000 CAD

# Create a sequence of break points from 0 to 100,000
breaks <- seq(0, 100000, by = bin_width)

# Assign each amount to a bin
df_filtered <- df_filtered %>%
  mutate(amount_bin = cut(amount, breaks = breaks, right = FALSE, include.lowest = TRUE))

# Step 3: Count the number of contracts in each bin
contract_counts_df <- df_filtered %>%
  group_by(amount_bin) %>%
  summarize(Contract_Count = n()) %>%
  ungroup()

# Ensure that all bins are represented, even if count is zero
all_bins <- levels(df_filtered$amount_bin)
contract_counts_df <- contract_counts_df %>%
  right_join(data.frame(amount_bin = all_bins), by = "amount_bin") %>%
  replace_na(list(Contract_Count = 0)) %>%
  arrange(amount_bin)

# Step 4: Create readable labels for x-axis in thousands
contract_counts_df <- contract_counts_df %>%
  mutate(
    # Extract lower and upper bounds from amount_bin
    lower = as.numeric(gsub("\\[|\\)", "", sapply(strsplit(as.character(amount_bin), ","), `[`, 1))),
    upper = as.numeric(gsub("\\[|\\)|\\]", "", sapply(strsplit(as.character(amount_bin), ","), `[`, 2))),
    amount_label = paste0(lower / 1000, "-", upper / 1000, "")
  )

# Step 5: Scale the y-axis counts to thousands if applicable
max_count <- max(contract_counts_df$Contract_Count)
if (max_count >= 1000) {
  contract_counts_df <- contract_counts_df %>%
    mutate(Contract_Count_k = Contract_Count / 1000)
  y_label_unit <- "Thousands"
} else {
  contract_counts_df <- contract_counts_df %>%
    mutate(Contract_Count_k = Contract_Count)  # No scaling
  y_label_unit <- "Number of Contracts"
}

# Step 6: Create the ggplot2 bar chart
ggplot(contract_counts_df, aes(x = amount_label, y = Contract_Count_k)) +
  geom_bar(stat = "identity", fill = "skyblue") +
  scale_y_continuous(
    labels = if (max_count >= 1000) {
      label_number(scale = 1, accuracy = 1)
    } else {
      label_number(accuracy = 1)
    },
    expand = expansion(mult = c(0, 0.05))
  ) +
  labs(
    x = "Award Amount (Thousands)",
    y = paste0("Number of Contracts ", if (max_count >= 1000) "(Thousands)" else "")
  ) +
  theme_minimal()
```

Though most contracts are small contracts (less than $100,000), the sum of these 246,000 contracts is only worth a measly 7.34 Billion. The Skyalyne contract itself outweighs all the small contracts.

```{r fig-small-big}
#| message: false
#| echo: false
#| warning: false
#| fig-cap: Total Amount Spent on Contracts
#| fig-align: center

# Step 1: Create a new column 'contract_size' categorizing contracts
df <- df %>%
  mutate(
    contract_size = factor(
      ifelse(amount <= 100000, 
             "Small Contracts (≤ $100,000)", 
             "Big Contracts (> $100,000)"),
      levels = c("Small Contracts (≤ $100,000)", "Big Contracts (> $100,000)")  # Specify order
    )
  )

# Summarize total amount spent per contract size category
total_spent_df <- df %>%
  group_by(contract_size) %>%
  summarize(
    total_amount_spent = sum(amount, na.rm = TRUE)
  ) %>%
  ungroup()

# Convert the total amount to billions of CAD
total_spent_df <- total_spent_df %>%
  mutate(total_amount_billion = total_amount_spent / 1e9)

# Create the bar chart
ggplot(total_spent_df, aes(x = contract_size, y = total_amount_billion, fill = contract_size)) +
  geom_bar(stat = "identity", width = 0.6) +
  geom_text(aes(label = paste0(round(total_amount_billion, 2), "B")), 
            vjust = -0.5, 
            size = 5) +  # Adds labels above the bars
  scale_fill_manual(
    values = c("Small Contracts (≤ $100,000)" = "skyblue", "Big Contracts (> $100,000)" = "skyblue")
  ) +
  scale_y_continuous(
    labels = scales::number_format(scale = 1, suffix = "B"),  # Displays y-axis in billions
    expand = expansion(mult = c(0, 0.1))  # Adds space above the bars for labels
  ) +
  labs(
    x = "Contract Size",
    y = "Total Amount Spent (Billions)"
  ) +
  theme_minimal() +
  theme(
    legend.position = "none"
  )
 



```

\newpage

# Model

This paper will use a simple linear regression to better understand the how contract award amounts are affected over time compared to their lengths. To do this the response variable will be Amount, and the two dependent variables will be the number of day since January 1st 2020 (start of the data set) and the length of the contract. The coefficients of these variables will indicate the relative importance of when the contract was issues compared to the length of contracts on determining the size of contracts. I will create two models, one to measure the coefficients for all the contracts excluding military contracts and a model for solely military contracts. This way we can compare to see if military contracts are getting larger because they are relatively longer or because recently they have purchased more expensive equipment.

## Model set-up

All model construction and diagnostics were conduction using R [REF], and the following packages: 

Tidyverse: For data manipulation and visualization [REF] 

Dplyr: [REF] 

Car: [REF] 

Caret:[REF] 

 

Model Formula: 

TODO 

Variables:

Amount:

Baseline Days:

Duration Days:

## Limitations 

One significant limitation is the assumption of a linear relationship between the predictors and the contract amount. In reality, the relationship may be more complex or nonlinear, especially over an extended period where economic factors and policy changes could introduce fluctuations not captured by a simple linear trend. 

Another limitation is the potential omission of relevant variables that influence contract amounts. Factors such as inflation, changes in government procurement policies, economic cycles, or industry-specific trends can significantly affect contract values. The exclusion of these variables may lead to omitted variable bias, where the estimated effects of the included predictors are distorted because they are capturing the influence of missing factors. 

Additionally, the presence of outliers or extreme values, particularly in financial data like contract amounts, can disproportionately influence the model estimates and lead to misleading conclusions. 

This model treats all contracts as a  homogeneous group. But considering that contracts both for National Defence and general government awards vary widely in scope and cost that would suggest a linear model is not appropriate. A more segmented model may be appropriate. This may be difficult as dividing the data in to groups based on contract size would not be sufficient as there is still a wide variety of contracts that are of similar size. Possibly using the Contract descriptions to divide the data, but this would require more advanced Natural Language processing techniques and in many cases the descriptions are hardly descriptive. 

Moreover, the model assumes that the effect of each predictor is constant over time. If the influence of contract duration or time on contract amounts changes due to evolving market conditions or government strategies, the model's fixed coefficients would not reflect these dynamic relationships.

## Diagnostics

The model diagnostics highlight the limitations of these two linear models, see Appendix TODO for relevant diagnostic plots. The Residuals Vs. Fitted plots indicate large clumps in the first quadrant. This indicates a significant bias in the predictions for both models. The QQ-Normal plots indicate that the majority of the residuals follow a normal distribution. However, there is a significant tail off in the end likely due to a large number of outliers which conclusively violates the normality assumption. The Scale-Location plot for the General Model indicates a funnel shape near the origin, indicates the assumption of homoscedasticity is violated. While the National Defence Model has a clump there is no clear pattern so the assumption of homoscedasticity maybe intact. For all predictors across both models their VIF values are very close to 1, indicating no multicollinearity. Both Cook's distance plots show there is a significant number of outliers in both models.

\newpage

# Results

The model general contracts indicates that the contract amount tends to decrease over time. Because Baseline days is slightly negative. This value suggests that every day that passes on average the value of non-military contracts is going down by $61.62 a day. This decline could reflect shifts in government spending priorities away from non-military departments. Additionally, as expect Duration Days is positive of the contract amount . This means that longer contracts are more expensive for the government.

In contrast, the model for military contracts reveals that the contract amount increases over time. The positive coefficient for Baseline days suggests an upward trend in military contract values since 2020. In this case the model suggests that the cost of military contracts is increasing by $852.50 every day. This is trend is due to the huge increases in military procurement we observed in FIG.  

The impact of contract duration on the contract amount is substantially larger in military contracts compared to non-military ones. Where military contracts cost $38,146 more per day of the length of the contract. This is again due largely by the 11 Billon Skyalyne contract, and the other large long contracts for training and fighter jets. 

```{r fig-results}
#| message: false
#| echo: false
#| warning: false
#| fig-cap: Model Results Summary
#| fig-align: center

# Tidy up the model results
model_tidy <- model %>% tidy() %>% mutate(model = "Excluding Military Contracts")
mil_model_tidy <- mil_model %>% tidy() %>% mutate(model = "Military Contracts Only")

# Combine the results into one table
combined_results <- bind_rows(model_tidy, mil_model_tidy)

combined_results <- combined_results %>%
  mutate(
    term = case_when(
      term == "(Intercept)" ~ "Intercept",
      term == "baseline_days" ~ "Baseline Days",
      term == "duration_days" ~ "Duration Days",
      TRUE ~ term # Keep any other terms as-is
    )
  )

# Determine the output format
output_format <- knitr::opts_knit$get("rmarkdown.pandoc.to")

# Choose styling based on output format
if (output_format == "latex") {
  combined_results %>%
    select(model, term, estimate, std.error, statistic, p.value) %>%
    rename(
      Model = model,
      Term = term,
      Estimate = estimate,
      `Std. Error` = std.error,
      `t-Statistic` = statistic,
      `p-Value` = p.value
    ) %>%
    kable(booktabs = TRUE, caption = "Model Results Summary") %>%
    kable_styling(latex_options = c("striped", "hold_position"))
} else {
  combined_results %>%
    select(model, term, estimate, std.error, statistic, p.value) %>%
    rename(
      Model = model,
      Term = term,
      Estimate = estimate,
      `Std. Error` = std.error,
      `t-Statistic` = statistic,
      `p-Value` = p.value
    ) %>%
    kable(format = "html", digits = 3, align = "c", caption = "Model Results Summary") %>%
    kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE)
}
```

\newpage

# Discussion

## First discussion point {#sec-first-point}

This study conducted an in-depth analysis of Canadian federal procurement data, with a focus on military contracts. The data was collected and processed to ensure accuracy and relevance. Using web scraping techniques, we gathered information from the Institute for Government's (IJF) Federal Award Data. The primary variables included contract descriptions, buyer and supplier names, contract amounts, and key dates such as award, start, and end dates.

To facilitate the analysis, we derived additional variables: Baseline Days, representing the number of days since January 1st, 2020, and Duration Days, calculated by subtracting the start date from the end date of each contract. These transformations were necessary because date variables are not directly suitable for linear modeling. We also standardized supplier names through a Processed Supplier variable to ensure consistency, given the variations in how supplier names were recorded. 

Data cleaning was a critical step. Contracts with negative or zero amounts were excluded due to their ambiguous nature. Contracts that started and ended on the same day were adjusted by extending the end date by one day to simplify duration calculations. After these refinements, the dataset comprised 301,094 contracts spanning from [TODO: start date] to [TODO: end date]. 

For the modeling phase, we employed a simple linear regression to explore how contract amounts are influenced by time and contract duration. Two separate models were constructed: one encompassing all contracts excluding military contracts, and another focusing solely on military contracts. This bifurcation allowed us to compare trends between military and non-military spending. 

## Second discussion point

The analysis revealed significant trends in Canada's federal procurement spending: 

Surge in Military Spending: Military spending has dramatically increased over the past couple of years. National Defence emerged as the dominant spender, allocating over $56 billion since 2020. While military spending was under $5 billion in 2021, it escalated to approximately $15 billion annually in the following years. This spike is attributed to substantial contracts for advanced military equipment and services, such as the $11.2 billion contract awarded to SkyAlyne for fighter pilot training—the largest in the dataset. Other notable contracts include multi-billion-dollar deals with Lockheed Martin, General Atomics, CAE, and Airbus for fighter planes and aviation services. 

Decline in Other Departments' Spending: In contrast, other government departments have experienced significant reductions in procurement spending. For instance, the Public Health Agency of Canada's spending, which was robust in 2020 due to pandemic-related expenditures, diminished to negligible levels in the subsequent years.  

Prevalence of Small Contracts: The majority of government contracts are relatively small. Approximately 81.75% of all contracts are valued under \$100,000, with the most common contract size ranging between \$10,000 and \$20,000. This pattern indicates a governmental preference for smaller contracts, possibly for regulatory reasons. There may be a rule that if a contract is below 20000 then it requires less scrutiny to be passed, in effect encouraging department to award more smaller contracts. Though it does not seem to be out of control as only TODO% of all spending in last 4 years is concentrated in contracts less than 100000. 

## Third discussion point


## Weaknesses

While the study provides valuable insights, several limitations must be acknowledged: 

Supplier Name Analysis: The methodology for standardizing supplier names, requires more rigorous techniques. The method used ensured that the top 10 suppliers are accurately aggregated. However, some contracts that these suppliers may have been missed. But beyond the top 10, the names of suppliers not well parsed out, with problems like variations of “incorporated” and that sort of thing, dominating the rest of the suppliers list. 

Model Limitations: The linear regression model demonstrated weaknesses, primarily due to its simplicity and the limitations of the dataset. The assumption of a linear relationship between the predictors (Baseline Days and Duration Days) and contract amounts may not capture the complexities of procurement spending, which can be influenced by many things such as; policy changes, economic conditions, and sector-specific dynamics. 

Methodological Constraints: The model did not account for external variables such as inflation, exchange rates, or changes in government procurement policies, which could significantly influence contract amounts. Additionally, treating all contracts as a homogeneous group overlooks the diversity in contract types and scopes. 


## Next Steps

To address these weaknesses and build upon the findings, the following steps are recommended: 

Enhance Data Analysis Techniques: 
Supplier Name Processing: Implement advanced text processing techniques, such as fuzzy matching, to accurately standardize supplier names and improve data reliability. ADD MORE 

Contract Description Analysis: Utilize text mining and content analysis methods on contract descriptions to uncover patterns in procurement objectives and priorities. ADD MORE 

Expand Data Collection:
Comprehensive Spending Data: Include other forms of government spending, such as in-house expenditures on salaries and operational costs, as this would contextualize the procurement budget in the larger scheme of federal spending overall. How much of the total federal budget goes into procurements? Are procurements more cost effective than in house spending? 

Investigate Specific Trends:
Public Health Agency Spending: Examine the factors contributing to the decline in the Public Health Agency of Canada's procurement spending. 

Proliferation of Small Contracts: Analyze the rationale behind the high frequency of small contracts, exploring whether this is a strategic decision to support smaller businesses or a reflection of procurement policy regulations. 

Refine Modeling Approaches:
Advanced Statistical Models: Explore more complex modeling techniques, such as nonlinear regression, time series analysis, or machine learning models, to capture the intricate relationships between variables. 

Incorporate Additional Variables: Include economic indicators, policy changes, and other relevant factors to improve the explanatory power of the models. 

By undertaking these steps, future research can provide a more comprehensive and nuanced understanding of Canadian federal procurement spending. This further analysis could inform policy decisions, promote transparency, and ensure that government resources are allocated effectively and efficiently. 

 


\newpage

\appendix

# Appendix {-}

# Web Scraping

These are step by step instructions on how to Web Scrape the IFJ procurement data page, because as of November 2024 there is no easy/automated way of downloading the 330 pages of data.

Note: It is important that docker, java, python and Firefox are installed on your machine as RSelenium requires these packages. To download Selenium and create a docker image, open the docker application and search for the Selenium package for the browser you wish to use, in this case Firefox.

1. Run a compatible Selenium docker image. You must make sure that the version of Selenium you are using is compatible with Firefox or whichever browser you choose. You must launch docker from your terminal whose directory matches that of the r file’s path to 01-download_data.R . You can check if the docker image has successfully been launched using the docker application's nice GUI. It is also important in this step to define the path of the local directory that the data should be saved into, this is shown as USER_PATH in the script. 

Terminal Command: 

user:canadian_gov_procurement USER_PATH$ docker run -d -p 4444:4444 -p 5900:5900 -v /USER_PATH/canadian_gov_procurement/data/raw_data:/home/seluser/Downloads selenium/standalone-firefox:3.141.59 

2. It is possible that the tags used to find the buttons on the web-site may change over time. So visit the IJF procurement data website and right click and inspect the download and next page buttons. This code uses the aria labels to locate these buttons, but there are many ways to identify them using html and css elements. 

3. Now the 01-down-load-data.R file can be executed. Be sure to modify USER_PATH in both to download_dir and host_down_load_dir to match the path of you docker and personal computer path. 

4. The for-loop simply runs "click download -> click next page" process 329 times, however IJF may add more pages so modify total_pages to scrape the number of pages IJF is offering. In the event of an error mid-way through scraping take note of which page failed to download (page that you are on is printed to the console) and simply set the start of the for-loop. After restarting the loop be sure to verify that the next downloaded page is the correct one, otherwise you will have to restart the process from step 1. While it may be tempting to reduce the Sys.sleep times to download faster (11 seconds delay per loop and 329 loops that's about 1 hour!), I found reducing the time cause errors as the pages were slow to load and thus ruining the process.

5. Done!

# Additional data details

TODO Removal of negative values, adding 1 day to contract lengths of 0, see cleaning script


# Proccessing Supplier

TODO processed_supplier
Talk about what I did thourougly, see data_cleaning script

Talk about next steps. 11th top supplier, and how there are still tons of useless words in there. Even how to approach I used may never work. Because at some point we will ban too many word and some suppliers with super generic names will be eliminated entirely.

Propose alternate methods

# Model details {#sec-model-details}

## Diagnostics

```{r fig-resid-model}
#| message: false
#| echo: false
#| warning: false
#| fig-align: center
#| fig-cap: Residual Vs Fitted for General Model

plot(model, which = 1)

```

```{r fig-resid-mil}
#| message: false
#| echo: false
#| warning: false
#| fig-align: center
#| fig-cap: Residual Vs Fitted for Military Model

plot(mil_model, which = 1)
```




```{r fig-qq-model}
#| message: false
#| echo: false
#| warning: false
#| fig-align: center
#| fig-cap: QQ-Normal General Model

# Q-Q Plot for full model
plot(model, which = 2)

```



```{r fig-qq-mil}
#| message: false
#| echo: false
#| warning: false
#| fig-align: center
#| fig-cap: QQ-Normal National Defence Model

# Q-Q Plot for National Defence model
plot(mil_model, which = 2)
```



```{r fig-sl-model}
#| message: false
#| echo: false
#| warning: false
#| fig-align: center
#| fig-cap: Scale-Location Plot for General model

# Scale-Location Plot for full model
plot(model, which = 3)

```



```{r fig-sl-mil}
#| message: false
#| echo: false
#| warning: false
#| fig-align: center
#| fig-cap: Scale-Location Plot for National Defence model

# Scale-Location Plot for National Defence model
plot(mil_model, which = 3)
```



```{r fig-rl-model}
#| message: false
#| echo: false
#| warning: false
#| fig-align: center
#| fig-cap: Residuals vs Leverage for Full model

# Residuals vs Leverage for full model
plot(model, which = 5)
```



```{r fig-rl-mil}
#| message: false
#| echo: false
#| warning: false
#| fig-align: center
#| fig-cap: Residuals vs Leverage for National Defence model


# Residuals vs Leverage for National Defence model
plot(mil_model, which = 5)
```


```{r fig-cooks-model}
#| message: false
#| echo: false
#| warning: false
#| fig-align: center
#| fig-cap: Cook's Distance for full model

#Identify influential data points using Cook's Distance.
# Cook's Distance for full model
plot(model, which = 4)
```



```{r fig-cooks-mil}
#| message: false
#| echo: false
#| warning: false
#| fig-align: center
#| fig-cap: Cook's Distance for National Defence model

#Identify influential data points using Cook's Distance.
# Cook's Distance for National Defence model
plot(mil_model, which = 4)
```


```{r}
#| message: false
#| echo: false
#| warning: false
#| fig-align: center
#| fig-cap: VIF Table


vif_model <- vif(model)
vif_mil_model <- vif(mil_model)

# Create a data frame with VIF values
vif_table <- data.frame(
  Predictor = names(vif_model),
  Model = round(as.numeric(vif_model), 6),
  Mil_Model = round(as.numeric(vif_mil_model), 6)
)



predictor_names <- c(
  "baseline_days" = "Baseline Days",
  "duration_days" = "Duration Days"
)

vif_table$Predictor <- predictor_names[vif_table$Predictor]

# Display the table using knitr's kable for better formatting
kable(vif_table, ,
      col.names = c("Predictor", "General Model", "National Defence Model"),
      align = 'c')

```

\newpage


# References

TODO Ref:

RSelenuim
VGAM
stringr
dplyr
tidyverse
zoo
kableExtra
knitr
scales
lubridate
ggplot2
rvest
readr
testthat
colorbrewerV2
