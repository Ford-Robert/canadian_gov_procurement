---
title: "EDA"
author: 
  - Robert Ford
format: pdf
---

```{r}
#| include: false
#| warning: false
#| message: false

library(tidyverse)
library(ggplot2)
library(dplyr)
library(lubridate)
library(scales)
library(knitr)
library(kableExtra)
library(zoo)

df <- read_csv(here::here("data/analysis_data/cleaned_data.csv"))

df <- df %>% select(-link)

```


```{r fig-template}
#| message: false
#| echo: false
#| warning: false
#| fig-cap: template
#| fig-align: center



```


```{r fig-head}
#| message: false
#| echo: false
#| warning: false
#| fig-cap: template
#| fig-align: center

df_table <- df %>% select(-contract, -start_date, -end_date)

kable(head(df_table, 5), caption = "Sample of the Data") %>%
  kable_styling(font_size = 10, latex_options = c("scale_down"))

```


This graph shows how much was awarded by month
```{r fig-award-amount-month}
#| message: false
#| echo: false
#| warning: false
#| fig-cap: template
#| fig-align: center


df_fig <- df %>%
  mutate(year_month = floor_date(award_date, "month"))

# Aggregate the amount by 'year_month'
monthly_spending <- df_fig %>%
  group_by(year_month) %>%
  summarise(total_amount = sum(amount, na.rm = TRUE))

# Plot the line graph with formatted y-axis labels
ggplot(monthly_spending, aes(x = year_month, y = total_amount)) +
  geom_line(color = "blue") +
  labs(title = "Amount Spent Each Month",
       x = "Time",
       y = "Amount Awarded") +
  scale_x_date(date_labels = "%Y-%m", date_breaks = "1 month") +
  scale_y_continuous(labels = comma) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```


```{r fig-template4}
#| message: false
#| echo: false
#| warning: false
#| fig-cap: template
#| fig-align: center

start_date_min <- min(df$start_date)
end_date_max <- as.Date("2030-12-31")

# Create events at start dates (add per_day amount)
events_start <- data.frame(date = df$start_date, amount = df$per_day)

# Create events at end dates + 1 day (subtract per_day amount)
events_end <- data.frame(date = df$end_date + 1, amount = -df$per_day)

# Combine start and end events
events <- rbind(events_start, events_end)

# Aggregate amounts by date
events <- aggregate(amount ~ date, data = events, sum)

# Sort events by date
events <- events[order(events$date), ]

# Compute cumulative sum of amounts to get the total per_day amount active on each date
events$cumulative_amount <- cumsum(events$amount)

# Create a full sequence of dates from the earliest start date to the latest end date
date_seq <- seq(start_date_min, end_date_max, by = "day")

# Merge cumulative amounts with the full date sequence
amounts <- data.frame(date = date_seq)
amounts <- merge(amounts, events[, c("date", "cumulative_amount")], by = "date", all.x = TRUE)

# Carry forward the last observed cumulative_amount to fill in missing dates
amounts$cumulative_amount <- na.locf(amounts$cumulative_amount, na.rm = FALSE)
amounts$cumulative_amount[is.na(amounts$cumulative_amount)] <- 0

# Plot the line chart using ggplot2
library(ggplot2)
ggplot(amounts, aes(x = date, y = cumulative_amount)) +
  geom_line(color = "blue") +
  labs(title = "Total Amount Spent Over Time",
       x = "Date",
       y = "Total Amount Spent per Day") +
  scale_y_continuous(labels = comma) +
  theme_minimal()


```
```{r}



```

```{r fig-template3}
#| message: false
#| echo: false
#| warning: false
#| fig-cap: template
#| fig-align: center


# Summarize total amount spent by each buyer
buyer_totals <- df %>%
  group_by(buyer) %>%
  summarise(total_amount = sum(amount, na.rm = TRUE)) %>%
  arrange(desc(total_amount))

# Select the top ten buyers
top_ten_buyers <- buyer_totals %>%
  slice_head(n = 10)

# Plot the bar chart
ggplot(top_ten_buyers, aes(x = reorder(buyer, total_amount), y = total_amount)) +
  geom_bar(stat = "identity", fill = "skyblue") +
  coord_flip() +
  labs(title = "Top 10 Buyers by Total Amount Spent",
       x = "Buyer",
       y = "Total Amount Spent") +
  scale_y_continuous(labels = comma) +
  theme_minimal()

```

```{r fig-template2}
#| message: false
#| echo: false
#| warning: false
#| fig-cap: template
#| fig-align: center

supplier_totals <- df %>%
  group_by(supplier) %>%
  summarise(total_amount = sum(amount, na.rm = TRUE)) %>%
  arrange(desc(total_amount))

# Select the top ten suppliers
top_suppliers <- supplier_totals %>%
  slice_head(n = 10)

# Wrap supplier names for better legibility
top_suppliers$supplier <- str_wrap(top_suppliers$supplier, width = 15)

# Plot the bar chart
ggplot(top_suppliers, aes(x = reorder(supplier, -total_amount), y = total_amount)) +
  geom_bar(stat = "identity", fill = "skyblue") +
  labs(title = "Amount Awarded to Top 10 Suppliers",
       x = "Supplier",
       y = "Total Amount Awarded") +
  scale_y_continuous(labels = comma) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    plot.margin = unit(c(1, 1, 1, 2), "cm")  # Adjust margins if necessary
  )

```


```{r}
#| message: false
#| echo: false
#| warning: false
#| fig-cap: "Average Contract Length (Days) by Government Department (Top 10)"
#| fig-align: center

# Load necessary libraries
library(dplyr)
library(ggplot2)



# Calculate average contract length per buyer (government department)
avg_contract_length <- df %>%
  mutate(contract_length_days = as.numeric(difftime(end_date, start_date, units = "days"))) %>%
  group_by(buyer) %>%
  summarise(`Average Length of Contract (Days)` = mean(contract_length_days, na.rm = TRUE)) %>%
  arrange(desc(`Average Length of Contract (Days)`)) %>%
  slice_head(n = 10)  # Select top 10 departments

# Create the bar chart
ggplot(avg_contract_length, aes(x = reorder(buyer, `Average Length of Contract (Days)`), y = `Average Length of Contract (Days)`)) +
  geom_bar(stat = "identity", fill = "steelblue") +
  coord_flip() +
  labs(x = "Government Department", y = "Average Contract Length (Days)", title = "Average Contract Length (Days) by Government Department (Top 10)") +
  theme_minimal()




```

```{r}
#| message: false
#| echo: false
#| warning: false
#| fig-cap: "Average Contract Size by Government Department (Top 10)"
#| fig-align: center

# Load necessary libraries
library(dplyr)
library(ggplot2)
library(scales)  # For formatting currency

# Calculate average contract size per buyer (government department)
avg_contract_size <- df %>%
  group_by(buyer) %>%
  summarise(`Average Contract Size` = mean(amount, na.rm = TRUE)) %>%
  arrange(desc(`Average Contract Size`)) %>%
  slice_head(n = 10)  # Select top 10 departments

# Create the bar chart
ggplot(avg_contract_size, aes(x = reorder(buyer, `Average Contract Size`), y = `Average Contract Size`)) +
  geom_bar(stat = "identity", fill = "darkgreen") +
  coord_flip() +
  scale_y_continuous(labels = dollar_format(prefix = "$")) +
  labs(x = "Government Department", y = "Average Contract Size", title = "Average Contract Size by Government Department (Top 10)") +
  theme_minimal()


```